{"version":3,"sources":["css.js","main.js"],"names":["string","player","n","id","undefined","time","string2","run","length","window","clearInterval","demo","innerHTML","style","substring","scrollTop","scrollHeight","init","btnPause","onclick","pause","btnPlay","play","btnSlow","slow","btnNormal","normal","btnFast","fast","setInterval","eyes","eye_ball","eyes_L","eyes_T","eye_ball_L","eye_ball_T","document","getElementById","offsetLeft","offsetWidth","console","log","offsetTop","offsetHeight","addEventListener","e","event","point_y","point_x","point_radius","point_radian","eye_ball_pos","eye_ball_canMove_max","clientWidth","clientY","clientX","Math","floor","radius","x","y","atan2","pos_xy","min","cssText","radian","sin","cos","pos","sqrt","pow"],"mappings":"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","file":"main.71ad56ff.map","sourceRoot":"..\\src","sourcesContent":["const string = `\n/* 我们先画皮卡丘的鼻子 */\n.nose {\n  position: relative;\n  top: 145px;\n  width: 0px;\n  height: 0px;\n  border: 10px solid black;\n  border-color: black transparent transparent;\n  border-bottom: none;\n}\n.yuan {\n  position: absolute;\n  top: -16px;\n  right: -10px;\n  width: 20px;\n  height: 6px;\n  border-radius: 10px 10px 0 0;\n  background-color: black;\n}\n.nose {\n  margin-left: -10px;\n  left: 50%;\n}\n/* 然后是皮卡丘的眼睛 */\n#eyes {\n  position: absolute;\n  top: 100px;\n  height: 64px;\n  width: 64px;\n  border-radius: 50%;\n  background-color: #2e2e2e;\n  border-color: #000;\n}\n/* 皮卡丘的眼珠是白色的 */\n#eye_ball {\n  position: absolute;\n  content: '';\n  display: block;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  border: 3px solid #000;\n  background-color: #fff;\n}\n\n.left.eye {\n  margin-left: -32px;\n  left: 50%;\n  transform: translateX(-100px);\n}\n\n.right.eye {\n  margin-left: -32px;\n  left: 50%;\n  transform: translateX(100px);\n}\n\n/* 该画皮卡丘的腮帮子了 */\n.face {\n  position: absolute;\n  top: 200px;\n  width: 88px;\n  height: 88px;\n  border-radius: 50%;\n  border: 3px solid black;\n  background-color: #ff0000;\n}\n.face {\n  left: 50%;\n  margin-left: -44px;\n}\n.face.left {\n  transform: translateX(-200px);\n}\n.face.right {\n  transform: translateX(200px);\n}\n\n/* 接着画皮卡丘的小嘴巴 */\n.mouth {\n  position: absolute;\n  top: 170px;\n  width: 200px;\n  height: 200px;\n  left: 50%;\n  margin-left: -100px;\n}\n/* 先是上嘴唇 */\n.mouth .up .lip.left {\n  transform: translateX(-53px);\n}\n.mouth .up .lip.right {\n  transform: translateX(53px);\n}\n\n.mouth .up .lip {\n  z-index: 1;\n  background-color: #ffe600;\n  position: absolute;\n  margin-left: -50px;\n  left: 50%;\n  width: 100px;\n  height: 30px;\n  border: 3px solid black;\n}\n\n.mouth .up .lip.left {\n  border-radius: 0 0 0 50px;\n  border-top-color: transparent;\n  border-right-color: transparent;\n}\n.mouth .up .lip.right {\n  border-radius: 0 0 50px 0;\n  border-top-color: transparent;\n  border-left-color: transparent;\n}\n\n.mouth .up .lip::before {\n  position: absolute;\n  top: -2px;\n  content: '';\n  background-color: #ffe600;\n}\n.mouth .up .lip.left::before {\n  right: -5px;\n  width: 7px;\n  height: 26px;\n}\n.mouth .up .lip.right::before {\n  left: -5px;\n  width: 7px;\n  height: 26px;\n}\n\n.mouth .up .lip::after {\n  position: absolute;\n  top: -4px;\n  content: '';\n  background-color: #ffe600;\n}\n.mouth .up .lip.left::after {\n  right: -5px;\n  width: 98px;\n  height: 2px;\n}\n\n.mouth .up .lip.right::after {\n  left: -5px;\n  width: 98px;\n  height: 2px;\n}\n\n.mouth .up .lip.left {\n  transform: translateX(-53px) rotateZ(-15deg);\n}\n.mouth .up .lip.right {\n  transform: translateX(53px) rotateZ(15deg);\n}\n\n/* 然后是下嘴唇 */\n.mouth .down {\n  overflow: hidden;\n  width: 200px;\n  height: 180px;\n  position: relative;\n  top: 15px;\n}\n\n.mouth .down .yuan1 {\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  margin-left: -75px;\n  overflow: hidden;\n  height: 1000px;\n  width: 150px;\n  border-radius: 75px/300px;\n  border: 3px solid black;\n  background-color: #9b000a;\n}\n\n.mouth .down .yuan1 .yuan2 {\n  position: absolute;\n  bottom: -70px;\n  left: 50%;\n  margin-left: -100px;\n  width: 200px;\n  height: 200px;\n  border-radius: 120px/100px;\n  background-color: #ff485f;\n}\n\n/* 让皮卡丘的小鼻子动起来 */\n.nose {\n  animation: wave 300ms infinite linear;\n}\n\n/* 这只皮卡丘就送给你啦 */\n`\nexport default string\n","import string from './css.js'\n\nconst player = {\n  n: 0,\n  id: undefined,\n  time: 20,\n  string2: '',\n\n  run: () => {\n    if (player.n > string.length - 2) {\n      window.clearInterval(player.id)\n      return\n    }\n    if (string[player.n] === '\\n') {\n      player.string2 += '<br>'\n    } else {\n      player.string2 += string[player.n]\n    }\n    if (string[player.n] === ' ') {\n      player.string2 += '&nbsp'\n    }\n    demo.innerHTML = player.string2\n    style.innerHTML = string.substring(0, player.n)\n    player.n = player.n + 1\n    demo.scrollTop = demo.scrollHeight\n  },\n\n  init: () => {\n    btnPause.onclick = player.pause\n    btnPlay.onclick = player.play\n    btnSlow.onclick = player.slow\n    btnNormal.onclick = player.normal\n    btnFast.onclick = player.fast\n    player.play()\n  },\n  play: () => {\n    window.clearInterval(player.id)\n    player.id = setInterval(player.run, player.time)\n  },\n  pause: () => {\n    window.clearInterval(player.id)\n  },\n  slow: () => {\n    player.pause()\n    player.time = 100\n    player.play()\n  },\n  normal: () => {\n    player.pause()\n    player.time = 30\n    player.play()\n  },\n  fast: () => {\n    player.pause()\n    player.time = 0\n    player.play()\n  },\n}\nplayer.init()\n\n// 眼球转动\nvar eyes, eye_ball, eyes_L, eyes_T, eye_ball_L, eye_ball_T\n\neyes = document.getElementById('eyes') //眼睛\n\neye_ball = document.getElementById('eye-ball') //眼球\n\neyes_L = eyes.offsetLeft + eyes.offsetWidth / 2 //眼睛中心位置\nconsole.log(eyes.offsetWidth)\neyes_T = eyes.offsetTop + eyes.offsetHeight / 2\n\neye_ball_L = eye_ball.offsetLeft + eye_ball.offsetWidth / 2 //眼球中心位置\n\neye_ball_T = eye_ball.offsetTop + eye_ball.offsetHeight / 2\n\naddEventListener(\n  'mousemove',\n  function (e) {\n    var e = e || window.event\n    let point_y,\n      point_x,\n      point_radius,\n      point_radian,\n      eye_ball_pos,\n      eye_ball_canMove_max\n    //计算眼珠可移动的的最大半径范围\n    eye_ball_canMove_max = eyes.clientWidth / 2 - eye_ball.offsetWidth / 2\n    console.log(eye_ball_canMove_max)\n    ;[point_y, point_x] = [e.clientY - eyes_T, e.clientX - eyes_L]\n\n    point_radius = Math.floor(\n      // 向下取整\n      radius({\n        x: point_x,\n\n        y: point_y,\n      })\n    )\n\n    point_radian = Math.atan2(point_x, point_y)\n\n    //计算眼球的位置,眼球半径随着鼠标与眼睛中心的半径以的1:15的变化率变化，不得超过出眼睛，限制最小值\n    eye_ball_pos = pos_xy(\n      Math.min(eye_ball_canMove_max, point_radius / 15),\n      point_radian\n    )\n    eye_ball.style.cssText = `left:${eye_ball_pos.x + eye_ball_canMove_max}px;\n            top: ${eye_ball_pos.y + eye_ball_canMove_max}px;`\n  },\n  false\n)\n//传入半径,弧度.计算x，y坐标\n\nfunction pos_xy(radius, radian) {\n  return {\n    x: Math.sin(radian) * radius,\n\n    y: Math.cos(radian) * radius,\n  }\n}\n\n// 勾股定理计算半径\n\nfunction radius(pos) {\n  return Math.sqrt(Math.pow(pos.x, 2) + Math.pow(pos.y, 2))\n}\n"]}